#!/bin/bash

set -euo pipefail
cd "$(dirname "$0")"
. ./utils.sh

# check for secretless-broker:latest
docker inspect secretless-broker:latest > /dev/null 2>&1 || { 
  echo "ERROR: secretless-broker:latest must exist locally for test to run.";
  exit 1;
}

# Set environment variables
export UNIQUE_TEST_ID
UNIQUE_TEST_ID="$(uuidgen | tr "[:upper:]" "[:lower:]" | head -c 12 | tr -d -)"
export SECRETLESS_IMAGE="${DOCKER_REGISTRY_PATH}/secretless-broker:${UNIQUE_TEST_ID}"
export TEST_NAMESPACE="test-secretless-${UNIQUE_TEST_ID}"

# Clean up when script completes
function finish {
  announce 'Wrapping up and removing test environment'

  # Delete registry images that were used
  deleteRegistryImage "${SECRETLESS_IMAGE}" > /dev/null

  # Delete test namespace
  runDockerCommand "
  kubectl delete --wait=true --ignore-not-found=true namespace '${TEST_NAMESPACE}'
"
}
trap finish EXIT

function testCRDs() {
  runDockerCommand "
# push the local secretless-broker image to the remote DOCKER_REGISTRY_PATH
docker tag 'secretless-broker:latest' '${SECRETLESS_IMAGE}' > /dev/null;
docker push '${SECRETLESS_IMAGE}' > /dev/null;

export SECRETLESS_CRD_SUFFIX='${UNIQUE_TEST_ID}';

# create test namespace
kubectl create namespace '${TEST_NAMESPACE}'

# switch to test namespace
kubens '${TEST_NAMESPACE}'

# run CRD tests
cd k8s-ci/k8s_crds;
export SECRETLESS_IMAGE='${SECRETLESS_IMAGE}';
./test
"
}

function main() {
  announce 'Preparing test environment'
  prepareTestEnvironment

  announce 'Test CRD'
  testCRDs
}

main
