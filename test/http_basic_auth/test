#!/bin/bash -e

local_test=false
while getopts :l opt; do
    case $opt in
        l) local_test=true ;;
       \?) echo "Unknown option -$OPTARG"; exit 1;;
    esac
done

docker_volume_flag=""
docker_volume_val=""
if $local_test; then
  docker_volume_flag="--volume"
  docker_volume_val="$(cd ../..; pwd):/secretless"
fi

assert_contains() {
  # assert_contains <string> <substring>
  local string="${1}"
  local substring="${2}"

  if [[ "${string}" =~ ${substring} ]]; then
      echo "."
      return
  fi

  echo "expected string"
  echo "${string}"
  echo "to contain substring"
  echo "${substring}"

  exit 1
}

echo "Waiting for Secretless to start"
# single quotes are intentional
# shellcheck disable=SC2016
docker-compose run --rm --no-deps test sh -c '
counter=0
while ! wget --quiet --output-document - http://secretless:5335/ready > /dev/null 2>&1; do
    if expr $counter = 10; then
      echo ""
      echo "Timed out waiting for Secretless"
      exit 1
    fi
    let "counter = $counter + 1"
    >&2 printf ". "
    sleep 1
done
'

>&2 echo "Secretless is up - continuing "
echo ""

echo "Running tests"
echo "test: http_good_basic_auth"
test_1=$(docker-compose run \
  --rm \
  --no-deps \
  ${docker_volume_flag:+$docker_volume_flag} ${docker_volume_val:+ $docker_volume_val} \
  test env http_proxy=http://secretless:8080 wget -q -O- nginx:8080/ 2>&1 || true)
assert_contains "${test_1}" "secured resource"

echo "test: http_bad_basic_auth"
test_2=$(docker-compose run \
  --rm \
  --no-deps \
  ${docker_volume_flag:+$docker_volume_flag} ${docker_volume_val:+ $docker_volume_val} \
  test env http_proxy=http://secretless:8081 wget -q -O- nginx:8080/ 2>&1 || true)
assert_contains "${test_2}" "wget: server returned error: HTTP/1.1 401 Unauthorized"
