version: '3.0'

services:
  pg:
    build:
      context: .
      dockerfile: Dockerfile.pg
    ports:
      - 5432
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 30s

  pg_no_tls:
    build:
      context: .
      dockerfile: Dockerfile.pg
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 30s

  secretless-dev:
    build:
      context: ../..
      dockerfile: Dockerfile.dev
    command: ./bin/reflex
    volumes:
      - ../../:/secretless
      - ./fixtures/secretless.yml:/secretless.yml
      - pg-socket:/sock

  secretless:
    build:
      context: ../..
    volumes:
      - ./fixtures/secretless.yml:/secretless.yml
      - pg-socket:/sock

  test:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: go test -v ./test/pg_handler/tests
    environment:
      TEST_ROOT: /secretless/test/pg_handler
      DB_PROTOCOL: pg
      DB_HOST_TLS: pg
      DB_HOST_NO_TLS: pg_no_tls
      DB_PORT: 5432
      DB_USER: test
      DB_PASSWORD: test
      SECRETLESS_HOST:
      VERBOSE:
# env vars required for benchmarking
      PG_ADDRESS:
      SECRETLESS_ADDRESS:
    volumes:
      - pg-socket:/sock
      # NOTE: fixtures are dynamically generated and don't exist in the secretless-dev snapshot
      # NOTE: volume mount to get latest secretless source instead of relying on snapshot
      - ../..:/secretless

volumes:
  pg-socket:
