#!/bin/bash

set -euo pipefail

cd "$(dirname "$0")"

. ./utils.sh

if [ $# -lt 1 ]; then
  echo "Usage $0 <test_path>"
  exit 1
fi

readonly TEST_PATH="$1"

# check for secretless-broker:latest
docker inspect secretless-broker:latest > /dev/null 2>&1 || { 
  echo "ERROR: secretless-broker:latest must exist locally for test to run.";
  exit 1;
}

# Set environment variables
TEST_ID="$(uuidgen | tr "[:upper:]" "[:lower:]" | head -c 12 | tr -d -)"
export TEST_ID
export SECRETLESS_IMAGE_NAME="${DOCKER_REGISTRY_PATH}/secretless-broker"
export SECRETLESS_IMAGE_TAG="${TEST_ID}"
export SECRETLESS_IMAGE="${SECRETLESS_IMAGE_NAME}:${SECRETLESS_IMAGE_TAG}";
export TEST_NAMESPACE="test-secretless-${TEST_ID}"

# Clean up when script completes
function finish {
  announce 'Wrapping up and removing test environment'

  # Delete registry images that were used
  deleteRegistryImage "${SECRETLESS_IMAGE_NAME}" "${SECRETLESS_IMAGE_TAG}" || true

  # Delete test namespace
  runDockerCommand "
    kubectl delete --wait=true --ignore-not-found=true namespace '${TEST_NAMESPACE}'
  "
}
trap finish EXIT

function runTest() {
  local test_path="$1"

  runDockerCommand "
# ensure the container has the appropriate env
export TEST_ID=${TEST_ID}
export SECRETLESS_IMAGE=${SECRETLESS_IMAGE}
export TEST_NAMESPACE=${TEST_NAMESPACE}

# push the local secretless-broker image to the remote DOCKER_REGISTRY_PATH
docker tag 'secretless-broker:latest' '${SECRETLESS_IMAGE}'> /dev/null;
docker push '${SECRETLESS_IMAGE}' > /dev/null;

# create test namespace
kubectl create namespace '${TEST_NAMESPACE}';

# switch to test namespace
kubens '${TEST_NAMESPACE}';

# run tests
cd '$test_path';
./test
"
}

function main() {
  announce 'Preparing test environment'
  prepareTestEnvironment

  announce "Testing: $TEST_PATH..."
  runTest "$TEST_PATH"
  announce "Testing $TEST_PATH complete!"
}

main
