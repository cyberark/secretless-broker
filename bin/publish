#!/bin/bash

set -e

if [[ -z "${TAG_NAME:-}" ]]; then
  echo "Please supply environment variable TAG_NAME."
  echo "If you see this error in Jenkins it means the publish script was run"
  echo "for a build that wasn't triggered by a tag - please check publish stage conditions."
  exit 1
fi

. bin/build_utils

readonly REGISTRY="cyberark"
readonly VERSION="$(short_version_tag)"
readonly FULL_VERSION_TAG="$(full_version_tag)"
readonly REDHAT_IMAGE="scan.connect.redhat.com/ospid-18d9f51d-9c0c-4031-9f9e-ef08aa2ff409/secretless-broker"
readonly IMAGES=(
  "secretless-broker"
  "secretless-broker-quickstart"
)

function main() {
  # Ensure TAG_NAME version matches project version
  if [[ "${TAG_NAME#"v"}" != "${VERSION}" ]]; then
    echo "TAG_NAME envvar version was '${TAG_NAME#"v"}', expected '${VERSION}'";
    echo "TAG_NAME envvar version must match project version";
    exit 1;
  fi

  # Accumulate TAGS
  #

  local TAGS=(
    "$VERSION"
  )

  # Add less specific version tags, eg. given 1.2.3, add 1.2 and 1
  for tag in $(gen_versions "$VERSION"); do
    TAGS+=("${tag}")
  done

  # Add 'latest' tag only when TAG_NAME is the highest semantic tag
  local LATEST_TAG
  LATEST_TAG="$(git tag | sort -r --version-sort | head -1)"
  if [[ "${TAG_NAME}" == "${LATEST_TAG}" ]]; then
    TAGS+=('latest')
  fi

  # Publish
  #

  # Publish combinations of images and tags
  for image_name in "${IMAGES[@]}"; do
    image_with_tag="$image_name:$FULL_VERSION_TAG"

    for tag in "${TAGS[@]}"; do
      image_with_version_tag="${REGISTRY}/${image_name}:${tag}"
      echo "Tagging and pushing ${image_with_version_tag}"

      docker tag "${image_with_tag}" "${image_with_version_tag}"
      docker push "${image_with_version_tag}"
    done
  done

  # Publish only latest to Redhat Registries
  echo "Tagging and pushing ${REDHAT_IMAGE}"

  docker tag "secretless-broker-redhat:${FULL_VERSION_TAG}" "${REDHAT_IMAGE}:${VERSION}"

  if docker login scan.connect.redhat.com -u unused -p "${REDHAT_API_KEY}"; then
    # you can't push the same tag twice to redhat registry, so ignore errors
    if ! docker push "${REDHAT_IMAGE}:${VERSION}"; then
      echo 'RedHat push FAILED! (maybe the image was pushed already?)'
      exit 0
    fi
  else
    echo 'Failed to log in to scan.connect.redhat.com'
    exit 1
  fi
}

main
